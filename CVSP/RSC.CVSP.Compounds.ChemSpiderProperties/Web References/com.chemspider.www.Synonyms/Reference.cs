//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace RSC.CVSP.Compounds.com.chemspider.www.Synonyms {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SynonymsSoap", Namespace="http://www.chemspider.com/")]
    public partial class Synonyms : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetStructureSynonymsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStructureSynonymsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveByCSIDListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Synonyms() {
            this.Url = global::RSC.CVSP.Compounds.Properties.Settings.Default.RSC_CVSP_Compounds_ChemSpiderProperties_com_chemspider_www1_Synonyms;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetStructureSynonymsCompletedEventHandler GetStructureSynonymsCompleted;
        
        /// <remarks/>
        public event GetStructureSynonymsInfoCompletedEventHandler GetStructureSynonymsInfoCompleted;
        
        /// <remarks/>
        public event RetrieveByCSIDListCompletedEventHandler RetrieveByCSIDListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/GetStructureSynonyms", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetStructureSynonyms(string mol, string token) {
            object[] results = this.Invoke("GetStructureSynonyms", new object[] {
                        mol,
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStructureSynonymsAsync(string mol, string token) {
            this.GetStructureSynonymsAsync(mol, token, null);
        }
        
        /// <remarks/>
        public void GetStructureSynonymsAsync(string mol, string token, object userState) {
            if ((this.GetStructureSynonymsOperationCompleted == null)) {
                this.GetStructureSynonymsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStructureSynonymsOperationCompleted);
            }
            this.InvokeAsync("GetStructureSynonyms", new object[] {
                        mol,
                        token}, this.GetStructureSynonymsOperationCompleted, userState);
        }
        
        private void OnGetStructureSynonymsOperationCompleted(object arg) {
            if ((this.GetStructureSynonymsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStructureSynonymsCompleted(this, new GetStructureSynonymsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/GetStructureSynonymsInfo", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SynonymInfo[] GetStructureSynonymsInfo(string mol, string token) {
            object[] results = this.Invoke("GetStructureSynonymsInfo", new object[] {
                        mol,
                        token});
            return ((SynonymInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStructureSynonymsInfoAsync(string mol, string token) {
            this.GetStructureSynonymsInfoAsync(mol, token, null);
        }
        
        /// <remarks/>
        public void GetStructureSynonymsInfoAsync(string mol, string token, object userState) {
            if ((this.GetStructureSynonymsInfoOperationCompleted == null)) {
                this.GetStructureSynonymsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStructureSynonymsInfoOperationCompleted);
            }
            this.InvokeAsync("GetStructureSynonymsInfo", new object[] {
                        mol,
                        token}, this.GetStructureSynonymsInfoOperationCompleted, userState);
        }
        
        private void OnGetStructureSynonymsInfoOperationCompleted(object arg) {
            if ((this.GetStructureSynonymsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStructureSynonymsInfoCompleted(this, new GetStructureSynonymsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.chemspider.com/RetrieveByCSIDList", RequestNamespace="http://www.chemspider.com/", ResponseNamespace="http://www.chemspider.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SynonymsInfo[] RetrieveByCSIDList(int[] csids, string token) {
            object[] results = this.Invoke("RetrieveByCSIDList", new object[] {
                        csids,
                        token});
            return ((SynonymsInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveByCSIDListAsync(int[] csids, string token) {
            this.RetrieveByCSIDListAsync(csids, token, null);
        }
        
        /// <remarks/>
        public void RetrieveByCSIDListAsync(int[] csids, string token, object userState) {
            if ((this.RetrieveByCSIDListOperationCompleted == null)) {
                this.RetrieveByCSIDListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveByCSIDListOperationCompleted);
            }
            this.InvokeAsync("RetrieveByCSIDList", new object[] {
                        csids,
                        token}, this.RetrieveByCSIDListOperationCompleted, userState);
        }
        
        private void OnRetrieveByCSIDListOperationCompleted(object arg) {
            if ((this.RetrieveByCSIDListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveByCSIDListCompleted(this, new RetrieveByCSIDListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.chemspider.com/")]
    public partial class SynonymInfo {
        
        private string synonymField;
        
        private bool approvedField;
        
        private string languageField;
        
        /// <remarks/>
        public string synonym {
            get {
                return this.synonymField;
            }
            set {
                this.synonymField = value;
            }
        }
        
        /// <remarks/>
        public bool approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.chemspider.com/")]
    public partial class SynonymsInfo {
        
        private int cSIDField;
        
        private int synonymIdField;
        
        private string synonymField;
        
        private string langIdField;
        
        private bool isValidatedField;
        
        private bool isDbIdField;
        
        private bool isCompoundTitleField;
        
        /// <remarks/>
        public int CSID {
            get {
                return this.cSIDField;
            }
            set {
                this.cSIDField = value;
            }
        }
        
        /// <remarks/>
        public int SynonymId {
            get {
                return this.synonymIdField;
            }
            set {
                this.synonymIdField = value;
            }
        }
        
        /// <remarks/>
        public string Synonym {
            get {
                return this.synonymField;
            }
            set {
                this.synonymField = value;
            }
        }
        
        /// <remarks/>
        public string LangId {
            get {
                return this.langIdField;
            }
            set {
                this.langIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValidated {
            get {
                return this.isValidatedField;
            }
            set {
                this.isValidatedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDbId {
            get {
                return this.isDbIdField;
            }
            set {
                this.isDbIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCompoundTitle {
            get {
                return this.isCompoundTitleField;
            }
            set {
                this.isCompoundTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStructureSynonymsCompletedEventHandler(object sender, GetStructureSynonymsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStructureSynonymsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStructureSynonymsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStructureSynonymsInfoCompletedEventHandler(object sender, GetStructureSynonymsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStructureSynonymsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStructureSynonymsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SynonymInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SynonymInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RetrieveByCSIDListCompletedEventHandler(object sender, RetrieveByCSIDListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveByCSIDListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveByCSIDListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SynonymsInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SynonymsInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591